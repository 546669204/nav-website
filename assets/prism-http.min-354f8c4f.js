import{g as m}from"./index-f29f4019.js";function h(t,a){for(var r=0;r<a.length;r++){const e=a[r];if(typeof e!="string"&&!Array.isArray(e)){for(const n in e)if(n!=="default"&&!(n in t)){const s=Object.getOwnPropertyDescriptor(e,n);s&&Object.defineProperty(t,n,s.get?s:{enumerable:!0,get:()=>e[n]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}var o={},l;function f(){return l||(l=1,function(t){function a(p){return RegExp("(^(?:"+p+"):[ 	]*(?![ 	]))[^]+","i")}t.languages.http={"request-line":{pattern:/^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\s(?:https?:\/\/|\/)\S*\sHTTP\/[\d.]+/m,inside:{method:{pattern:/^[A-Z]+\b/,alias:"property"},"request-target":{pattern:/^(\s)(?:https?:\/\/|\/)\S*(?=\s)/,lookbehind:!0,alias:"url",inside:t.languages.uri},"http-version":{pattern:/^(\s)HTTP\/[\d.]+/,lookbehind:!0,alias:"property"}}},"response-status":{pattern:/^HTTP\/[\d.]+ \d+ .+/m,inside:{"http-version":{pattern:/^HTTP\/[\d.]+/,alias:"property"},"status-code":{pattern:/^(\s)\d+(?=\s)/,lookbehind:!0,alias:"number"},"reason-phrase":{pattern:/^(\s).+/,lookbehind:!0,alias:"string"}}},header:{pattern:/^[\w-]+:.+(?:(?:\r\n?|\n)[ \t].+)*/m,inside:{"header-value":[{pattern:a("Content-Security-Policy"),lookbehind:!0,alias:["csp","languages-csp"],inside:t.languages.csp},{pattern:a("Public-Key-Pins(?:-Report-Only)?"),lookbehind:!0,alias:["hpkp","languages-hpkp"],inside:t.languages.hpkp},{pattern:a("Strict-Transport-Security"),lookbehind:!0,alias:["hsts","languages-hsts"],inside:t.languages.hsts},{pattern:a("[^:]+"),lookbehind:!0}],"header-name":{pattern:/^[^:]+/,alias:"keyword"},punctuation:/^:/}}};var r,e=t.languages,n={"application/javascript":e.javascript,"application/json":e.json||e.javascript,"application/xml":e.xml,"text/xml":e.xml,"text/html":e.html,"text/css":e.css,"text/plain":e.plain},s={"application/json":!0,"application/xml":!0};function c(p){var g=p.replace(/^[a-z]+\//,"");return"(?:"+p+"|\\w+/(?:[\\w.-]+\\+)+"+g+"(?![+\\w.-]))"}for(var i in n)if(n[i]){r=r||{};var d=s[i]?c(i):i;r[i.replace(/\//g,"-")]={pattern:RegExp("(content-type:\\s*"+d+`(?:(?:\r
?|
)[\\w-].*)*(?:\r(?:
|(?!
))|
))[^ 	\\w-][^]*`,"i"),lookbehind:!0,inside:n[i]}}r&&t.languages.insertBefore("http","header",r)}(Prism)),o}var u=f();const b=m(u),T=h({__proto__:null,default:b},[u]);export{T as p};
